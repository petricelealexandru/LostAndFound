<div id="found-page">
    <div class="found-container">
        <div class="parinte">
            <div class="formular-box" data-bind="with: ItemVM">
                <div class="title-input">Do you found something?</div>
                <div class="section-input">
                    <select placeholder="Category" class="input" data-bind="options: Parent.AvailableCategories, value: CategoryId, optionsValue: 'Id',optionsText: 'Text'" />
                    <input type="text" placeholder="Color" class="input" data-bind="value: Color">
                    <select placeholder="County" class="input" data-bind="options: Parent.AvailableCounties, value: CountyId,optionsValue: 'Id',optionsText: 'Text'" />
                    <input type="text" placeholder="City" class="input" data-bind="value: City">
                    <input type="text" placeholder="Address" class="input" data-bind="value: Address">
                    <input type="text" placeholder="Contact email" class="input" data-bind="value: ContactEmail">
                    <input type="text" placeholder="Contact number" class="input" data-bind="value: ContactNumber">
                    <input type="text" placeholder="Description" class="input" data-bind="value: Description">
                </div>
                <div class="insert-photo">
                    <img src="~/img/rectangle 27.png" class="upload-photo">
                    <img src="~/img/rectangle 27.png" class="upload-photo">
                    <img src="~/img/rectangle 27.png" class="upload-photo">
                </div>
                <div class="buton">
                    <input type="button" value="Send" class="send-button" data-bind="click: Parent.Save">
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{

    <script>

        function FoundItemViewModel(parent) {
            var self = this;

            self.Parent = parent;

            self.CategoryId = ko.observable();
            self.Color = ko.observable();
            self.DateandTime = ko.observable(new Date());
            self.CountyId = ko.observable();
            self.City = ko.observable();
            self.Address = ko.observable();
            self.ContactEmail = ko.observable();
            self.ContactNumber = ko.observable();
            self.Description = ko.observable();
            self.Reward = ko.observable();
            self.Cost = ko.observable();
        }

        function FoundPageViewModel() {
            var self = this;

            self.ItemVM = ko.observable();

            self.AvailableCategories = categoriesAvailableList;
            self.AvailableCounties = ko.observableArray([]);

            self.Initialize = function () {
                var itemVm = new FoundItemViewModel(self);
                self.ItemVM(itemVm);
            }

            self.GetCounties = function () {
                var url = "/GetCounties";
                ajaxHelper.getWithoutData(url,
                    function (result) {
                        var items = result.Data;

                        var itemsListVM = [];
                        for (var i = 0; i < items.length; i++) {
                            var countyVM = new CountyViewModel();
                            countyVM.Initialize(items[i]);
                            itemsListVM.push(countyVM);
                        }

                        self.AvailableCounties(itemsListVM);
                    },
                    function (err) {
                    });
            }

            self.Save = function () {
                var postModel = self.CollectData();
                var url = "/CreateFoundItem";
                ajaxHelper.post(url, postModel,
                    function (result) {
                    },
                    function (err) {
                    });
            }

            self.CollectData = function () {
                return {
                    "ItemTypeId": self.ItemVM().CategoryId(),
                    "Color": self.ItemVM().Color(),
                    "CountyId": self.ItemVM().CountyId(),
                    "City": self.ItemVM().City(),
                    "Address": self.ItemVM().Address(),
                    "ContactEmail": self.ItemVM().ContactEmail(),
                    "ContactNumber": self.ItemVM().ContactNumber(),
                    "Description": self.ItemVM().Description(),
                }
            }
        }

        var foundPageVM = new FoundPageViewModel();

        $(document).ready(function () {
            foundPageVM.GetCounties();
            foundPageVM.Initialize();

            ko.applyBindings(foundPageVM, document.getElementById('found-page'));
        })

    </script>
}
