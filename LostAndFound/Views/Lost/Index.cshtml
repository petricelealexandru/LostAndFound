<div id="lost-page">
    <div class="lost-container">
        <div class="parinte">
            <div class="formular-box" data-bind="with: ItemVM">
                <div class="title-input">Do you lost something?</div>
                <div class="section-input">
                    <select placeholder="Category" class="input" data-bind="options: Parent.AvailableCategories, value: CategoryId,optionsValue: 'Id',optionsText: 'Text'" />
                    <input type="text" placeholder="Color" class="input" data-bind="value: Color">
                    <input type="text" class="input" data-bind="dateTimePicker: DateAndTime,
                                      dateTimePickerOptions: {
                                        format: 'MM/DD/YYYY HH:mm',
                                      }" />
                    <select placeholder="County" class="input" data-bind="options: Parent.AvailableCounties, value: CountyId,optionsValue: 'Id',optionsText: 'Text'" />
                    <input type="text" placeholder="City" class="input" data-bind="value: City">
                    <input type="text" placeholder="Address" class="input" data-bind="value: Address">
                    <input type="text" placeholder="Contact email" class="input" data-bind="value: ContactEmail">
                    <input type="text" placeholder="Contact number" class="input" data-bind="value: ContactNumber">
                    <input type="text" placeholder="Description" class="input" data-bind="value: Description">
                    <div class="reward">
                        <input type="checkbox" class="checkbox" data-bind="checked: Reward">
                        <label class="label-reward">Reward</label>
                        <input type="text" placeholder="Cost" class="input-cost" data-bind="value: RewardCost">
                    </div>
                </div>
                <div class="insert-photo">
                    <img id="preview-picture" src="http://placehold.it/180" style="width: 100px; height: 100px; object-fit: cover" />
                    <input type='file' data-bind="event: {change: readURL.bind($data, this)}" />
                </div>
                <div class="buton">
                    <input type="button" value="Send" class="send-button" data-bind="click: Parent.Save">
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{

    <script>

        function LostItemViewModel(parent) {
            var self = this;

            self.Parent = parent;

            self.CategoryId = ko.observable();
            self.Color = ko.observable();
            self.DateAndTime = ko.observable(new Date());
            self.CountyId = ko.observable();
            self.City = ko.observable();
            self.Address = ko.observable();
            self.ContactEmail = ko.observable();
            self.ContactNumber = ko.observable();
            self.Description = ko.observable();
            self.Reward = ko.observable();
            self.RewardCost = ko.observable();
            self.PictureContent = ko.observable();

            self.readURL = function (input, vm, element) {
                debugger
                if (element.currentTarget.files && element.currentTarget.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $('#preview-picture').attr('src', e.target.result);
                        self.PictureContent(e.target.result);
                    };
                    reader.readAsDataURL(element.currentTarget.files[0]);
                }
            }
        }

        function LostPageViewModel() {
            var self = this;

            self.ItemVM = ko.observable();

            self.AvailableCategories = categoriesAvailableList;
            self.AvailableCounties = ko.observableArray([]);;

            self.Initialize = function () {
                var itemVm = new LostItemViewModel(self);
                self.ItemVM(itemVm);
            }

            self.GetCounties = function () {
                var url = "/GetCounties";
                ajaxHelper.getWithoutData(url,
                    function (result) {
                        var items = result.Data;

                        var itemsListVM = [];
                        for (var i = 0; i < items.length; i++) {
                            var countyVM = new CountyViewModel();
                            countyVM.Initialize(items[i]);
                            itemsListVM.push(countyVM);
                        }

                        self.AvailableCounties(itemsListVM);
                    },
                    function (err) {
                    });
            }

            self.Save = function () {
                var postModel = self.CollectData();

                if (!postModel.Color || postModel.Color === "") {
                    toastr.error('Please fill Color input!');
                    return;
                }

                if (!postModel.City || postModel.City === "") {
                    toastr.error('Please fill City input!');
                    return;
                }

                if (!postModel.Address || postModel.Address === "") {
                    toastr.error('Please fill Address input!');
                    return;
                }

                if (!emailRegex.test(postModel.ContactEmail)) {
                    toastr.error('Please fill ContactEmail input!');
                    return;
                }

                if (!phoneNumberRegex.test(postModel.ContactNumber)) {
                    toastr.error('Please fill valid ContactNumber input!');
                    return;
                }

                if (postModel.Reward == true) {
                    if (!numberRegex.test(postModel.RewardCost)) {
                        toastr.error('The reward can be just a number!');
                        return;
                    }
                }

                var url = "/CreateLostItem";
                ajaxHelper.post(url, postModel,
                    function (result) {
                        toastr.success('Successfully!');
                    },
                    function (err) {
                        toastr.error('Error!');
                    });
            }

            self.CollectData = function () {
                return {
                    "ItemTypeId": self.ItemVM().CategoryId(),
                    "Color": self.ItemVM().Color(),
                    "CountyId": self.ItemVM().CountyId(),
                    "City": self.ItemVM().City(),
                    "Address": self.ItemVM().Address(),
                    "ContactEmail": self.ItemVM().ContactEmail(),
                    "ContactNumber": self.ItemVM().ContactNumber(),
                    "Description": self.ItemVM().Description(),
                    "Reward": self.ItemVM().Reward(),
                    "RewardCost": self.ItemVM().RewardCost(),
                    "PictureContent": self.ItemVM().PictureContent(),
                }
            }
        }

        var lostPageVM = new LostPageViewModel();

        $(document).ready(function () {

            lostPageVM.GetCounties();
            lostPageVM.Initialize();

            ko.applyBindings(lostPageVM, document.getElementById('lost-page'));
        })

    </script>
}